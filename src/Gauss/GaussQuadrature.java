package Gauss;

public class GaussQuadrature {
    /**
     * Метод для вычисления узлов интегрирования и соответствующих весов
     * для метода Гауссовой квадратуры на каждом из подотрезков разбиения
     * исходного интервала интегрирования [a, b].
     *
     * @param weights массив для сохранения весов узлов интегрирования
     * @param nodes   массив для сохранения узлов интегрирования
     * @param a       нижний предел интегрирования
     * @param b       верхний предел интегрирования
     * @param n       количество узлов на каждом подотрезке разбиения
     * @param s       количество подотрезков разбиения
     */
    public static void NodesCalculation(double[] weights, double[] nodes, double a, double b, int n, int s) {
        // Вычисление шага разбиения
        double h = (b - a) / s;
        // Цикл по подотрезкам разбиения
        for (int j = 0; j < s; j++) {
            double sub_a = a + j * h;   // Начало текущего подотрезка
            double sub_b = sub_a + h;   // Конец текущего подотрезка

            // Цикл по узлам интегрирования на текущем подотрезке
            for (int i = 0; i < n; i++) {
                nodes[j * n + i] = sub_a + (2 * i + 1) * (sub_b - sub_a) / (2 * n);   // Вычисление веса узла интегрирования
                weights[j * n + i] = (sub_b - sub_a) / n;   // Вычисление веса узла интегрирования
            }
        }
    }
}
